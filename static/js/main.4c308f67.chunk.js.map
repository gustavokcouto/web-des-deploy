{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["cytoscape","use","edgehandles","nodeHtmlLabel","Demo","props","componentDidMount","initCytoscape","cy","window","container","document","getElementById","ready","style","selector","css","elements","nodes","state","map","node","data","id","position","x","x_position","y","y_position","edges","edge","source","target","eh","handleNodes","handleInDrawMode","edgeType","sourceNode","targetNode","loopAllowed","edgeParams","addEdgeEvent","tpl","setUpListeners","on","addNodeEvent","event","includes","newState","Object","assign","push","setState","eventNames","console","log","changeEdgeIdInput","e","length","classes","addNode","add","group","label","renderedPosition","handleAddEventNameChange","addEventNameInput","value","deleteEventChange","deleteEventInput","changeEdgeEventChange","changeEdgeEventInput","changeEdgeIdChange","clickSelect","select","addEdge","clickAddNodeButton","clickAddEdgeButton","clickAddEventButton","events","name","clickDeleteEventButton","filter","clickAddEventToEdgeButton","edgeIndex","findIndex","forEach","eventName","index","cyEdge","clickRemoveEventFromEdgeButton","w","h","bind","this","enableDrawMode","disableDrawMode","autoungrabify","key","onClick","className","type","onChange","React","Component","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.4c308f67.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css'\nimport edgehandles from 'cytoscape-edgehandles';\nimport nodeHtmlLabel from 'cytoscape-node-html-label';\nimport cytoscape from 'cytoscape';\ncytoscape.use( edgehandles );\ncytoscape.use( nodeHtmlLabel );\n\nexport default class Demo extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      nodes: [],\n      edges: [],\n      events: [],\n      w: 0,\n      h: 0,\n      addEventNameInput: '',\n      deleteEventInput: '',\n      changeEdgeEventInput: '',\n      changeEdgeIdInput: ''\n    }\n\n    this.addEdgeEvent = this.addEdgeEvent.bind(this)\n    this.addNodeEvent = this.addNodeEvent.bind(this)\n    this.clickAddNodeButton = this.clickAddNodeButton.bind(this)\n    this.clickAddEdgeButton = this.clickAddEdgeButton.bind(this)\n    this.clickAddEventButton = this.clickAddEventButton.bind(this)\n    this.handleAddEventNameChange = this.handleAddEventNameChange.bind(this)\n    this.deleteEventChange = this.deleteEventChange.bind(this)\n    this.clickDeleteEventButton = this.clickDeleteEventButton.bind(this)\n    this.changeEdgeEventChange = this.changeEdgeEventChange.bind(this)\n    this.clickRemoveEventFromEdgeButton = this.clickRemoveEventFromEdgeButton.bind(this)\n    this.changeEdgeIdChange = this.changeEdgeIdChange.bind(this)\n    this.clickRemoveEventFromEdgeButton = this.clickRemoveEventFromEdgeButton.bind(this)\n  }\n  \n\n  componentDidMount = () => {\n    this.initCytoscape()\n  }\n\n  initCytoscape = () => {\n    this.cy = window.cy = cytoscape({\n      container: document.getElementById('cy'),\n\n      ready: function() {},\n\n      style: [\n        {\n          selector: 'node[name]',\n          css: {\n            'content': 'data(name)'\n          }\n        },\n        {\n          selector: 'edge',\n          style: {\n            'curve-style': 'bezier',\n            'target-arrow-shape': 'triangle'\n          }\n        },\n        // some style for the ext\n        {\n          selector: '.eh-handle',\n          style: {\n            'width': 0,\n            'height': 0,\n          }\n        },\n\n        {\n          selector: '.eh-hover',\n          style: {\n            'background-color': 'red'\n          }\n        },\n\n        {\n          selector: '.eh-source',\n          style: {\n            'border-width': 2,\n            'border-color': 'red'\n          }\n        },\n\n        {\n          selector: '.eh-target',\n          style: {\n            'border-width': 2,\n            'border-color': 'red'\n          }\n        },\n\n        {\n          selector: '.eh-preview, .eh-ghost-edge',\n          style: {\n            'background-color': 'red',\n            'line-color': 'red',\n            'target-arrow-color': 'red',\n            'source-arrow-color': 'red'\n          }\n        },\n\n        {\n          selector: '.eh-ghost-edge.eh-preview-active',\n          style: {\n            'opacity': 0\n          }\n        },\n\n        {\n          \"selector\": \"node[label]\",\n          \"style\": {\n            \"label\": \"data(label)\"\n          }\n        },\n\n        {\n          \"selector\": \"edge[label]\",\n          \"style\": {\n            \"label\": \"data(label)\",\n            \"width\": 3\n          }\n        },\n\n        {\n          \"selector\": \".top-left\",\n          \"style\": {\n            \"text-valign\": \"top\",\n            \"text-halign\": \"left\"\n          }\n        },\n\n        {\n          \"selector\": \".top-center\",\n          \"style\": {\n            \"text-valign\": \"top\",\n            \"text-halign\": \"center\"\n          }\n        },\n\n        {\n          \"selector\": \".top-right\",\n          \"style\": {\n            \"text-valign\": \"top\",\n            \"text-halign\": \"right\"\n          }\n        },\n\n        {\n          \"selector\": \".center-left\",\n          \"style\": {\n            \"text-valign\": \"center\",\n            \"text-halign\": \"left\"\n          }\n        },\n\n        {\n          \"selector\": \".center-center\",\n          \"style\": {\n            \"text-valign\": \"center\",\n            \"text-halign\": \"center\"\n          }\n        },\n\n        {\n          \"selector\": \".center-right\",\n          \"style\": {\n            \"text-valign\": \"center\",\n            \"text-halign\": \"right\"\n          }\n        },\n\n        {\n          \"selector\": \".bottom-left\",\n          \"style\": {\n            \"text-valign\": \"bottom\",\n            \"text-halign\": \"left\"\n          }\n        },\n\n        {\n          \"selector\": \".bottom-center\",\n          \"style\": {\n            \"text-valign\": \"bottom\",\n            \"text-halign\": \"center\"\n          }\n        },\n\n        {\n          \"selector\": \".bottom-right\",\n          \"style\": {\n            \"text-valign\": \"bottom\",\n            \"text-halign\": \"right\"\n          }\n        },\n\n        {\n          \"selector\": \".multiline-manual\",\n          \"style\": {\n            \"text-wrap\": \"wrap\"\n          }\n        },\n\n        {\n          \"selector\": \".multiline-auto\",\n          \"style\": {\n            \"text-wrap\": \"wrap\",\n            \"text-max-width\": 80\n          }\n        },\n\n        {\n          \"selector\": \".autorotate\",\n          \"style\": {\n            \"edge-text-rotation\": \"autorotate\"\n          }\n        },\n\n        {\n          \"selector\": \".background\",\n          \"style\": {\n            \"text-background-opacity\": 1,\n            \"color\": \"#fff\",\n            \"text-background-color\": \"#888\",\n            \"text-background-shape\": \"roundrectangle\",\n            \"text-border-color\": \"#000\",\n            \"text-border-width\": 1,\n            \"text-border-opacity\": 1\n          }\n        },\n\n        {\n          \"selector\": \".outline\",\n          \"style\": {\n            \"color\": \"#fff\",\n            \"text-outline-color\": \"#888\",\n            \"text-outline-width\": 3\n          }\n        }\n      ],\n\n      elements: {\n        nodes: this.state.nodes.map(node => ({\n          data: {\n            id: node.id\n          },\n          position: {\n            x: node.x_position,\n            y: node.y_position\n          }\n        })),\n        edges: this.state.edges.map(edge => ({\n          data: {\n            source: edge.source,\n            target: edge.target\n          }\n        }))\n      },\n    })\n\n    this.eh = this.cy.edgehandles({\n      handleNodes: 'node',\n      handleInDrawMode: false,\n      edgeType: (sourceNode, targetNode) => {\n        return 'flat';\n      },\n      loopAllowed: (node) => {\n        // for the specified node, return whether edges from itself to itself are allowed\n        return true;\n      },\n      edgeParams: this.addEdgeEvent\n    })\n    this.cy.nodeHtmlLabel([\n      {\n        tpl() {\n          return ''; // your html template here\n        }\n      }\n    ]);\n\n    this.setUpListeners()\n  }\n  \n  setUpListeners = () => {\n    this.cy.on('tap', this.addNodeEvent)\n\n    this.cy.on('add', 'node', (event) => {\n      if(event.target.id().includes('node_')) {\n        let newState = Object.assign({}, this.state);\n        let node = {\n          id: event.target.id(),\n          x_position: event.target.position('x'),\n          y_position: event.target.position('y')\n        }\n        newState.nodes.push(node)\n        this.setState(newState)\n      }\n    })\n\n    this.cy.on('add', 'edge', (event) => {\n      if(event.target.id().includes('edge_')) {\n        let newState = Object.assign({}, this.state);\n        let edge = {\n          id: event.target.id(),\n          source: event.target.source().id(),\n          target: event.target.target().id(),\n          eventNames: []\n        }\n        console.log(edge)\n        newState.edges.push(edge)\n        if (this.state.changeEdgeIdInput === '') {\n          newState.changeEdgeIdInput = edge.id\n        }\n\n        this.setState(newState)\n      }\n    })\n\n    this.cy.nodes().on('click', function(e){\n      console.log('click on node')\n    })\n  }\n\n  addEdgeEvent = (sourceNode, targetNode) => {\n    let edge = {\n      data: {\n        id: \"edge_\" + this.state.edges.length,\n        source: sourceNode.id(), \n        target: targetNode.id(),\n      },\n      classes: 'multiline-manual'\n    }\n    return edge\n  }\n\n  addNodeEvent = (event) => {\n    if (this.state.addNode) {\n      this.cy.add({\n        group: 'nodes',\n        data: {\n          id: 'node_' + this.state.nodes.length,\n          label: 'node_' + this.state.nodes.length,\n        },\n        renderedPosition: {\n          x: event.renderedPosition.x,\n          y: event.renderedPosition.y,\n        }\n      })\n    }\n  }\n\n  handleAddEventNameChange = (event) => {\n    let newState = Object.assign({}, this.state);\n    newState.addEventNameInput = event.target.value\n    this.setState(newState)\n  }\n\n  deleteEventChange = (event) => {\n    let newState = Object.assign({}, this.state);\n    newState.deleteEventInput = event.target.value\n    this.setState(newState)\n  }\n\n  changeEdgeEventChange = (event) => {\n    let newState = Object.assign({}, this.state);\n    newState.changeEdgeEventInput = event.target.value\n    this.setState(newState)\n  }\n\n  changeEdgeIdChange = (event) => {\n    let newState = Object.assign({}, this.state);\n    newState.changeEdgeIdInput = event.target.value\n    this.setState(newState)\n  }\n\n  clickSelect = () => {\n    let newState = Object.assign({}, this.state);\n    newState.select = !newState.select\n    newState.addEdge = false;\n    newState.addNode = false;\n    this.setState(newState)\n  }\n\n  clickAddNodeButton = () => {\n    let newState = Object.assign({}, this.state);\n    newState.addNode = !newState.addNode\n    newState.addEdge = false;\n    newState.select = false;\n    this.setState(newState)\n  }\n\n  clickAddEdgeButton = () => {\n    let newState = Object.assign({}, this.state);\n    newState.addEdge = !newState.addEdge\n    newState.addNode = false;\n    newState.select = false;\n    this.setState(newState)\n  }\n\n  clickAddEventButton = () => {\n    let newState = Object.assign({}, this.state);\n    newState.events.push({\n      name: this.state.addEventNameInput\n    })\n    newState.addEventNameInput = ''\n    if (newState.deleteEventInput === '') {\n      newState.deleteEventInput = newState.events[0].name\n    }\n    if (newState.changeEdgeEventInput === '') {\n      newState.changeEdgeEventInput = newState.events[0].name\n    }\n    this.setState(newState)\n  }\n\n  clickDeleteEventButton = () => {\n    let newState = Object.assign({}, this.state);\n    newState.events = this.state.events.filter(event => {\n      return event.name !== this.state.deleteEventInput\n    })\n    if (newState.events.length) {\n      newState.deleteEventInput = newState.events[0].name\n    }\n    else {\n      newState.deleteEventInput = ''\n    }\n    this.setState(newState)\n  }\n\n  clickAddEventToEdgeButton = () => {\n    let newState = Object.assign({}, this.state);\n    let edgeIndex = this.state.edges.findIndex(edge => {\n      return edge.id === this.state.changeEdgeIdInput\n    })\n    console.log(\"edgeIndex: \" + edgeIndex)\n    if (edgeIndex === -1) {\n      return\n    }\n    newState.edges[edgeIndex].eventNames.push(this.state.changeEdgeEventInput)\n    let label = ''\n    newState.edges[edgeIndex].eventNames.forEach((eventName, index) => {\n      if(index !== 0){\n        label += '\\n'\n      }\n      label += eventName\n    })\n    let cyEdge = this.cy.edges('#' + newState.edges[edgeIndex].id)[0]\n    if(!cyEdge){\n      return\n    }\n    cyEdge.data('label', label)\n    this.setState(newState)\n  }\n\n  clickRemoveEventFromEdgeButton = () => {\n    let newState = Object.assign({}, this.state);\n    let edgeIndex = this.state.edges.findIndex(edge => {\n      return edge.id === this.state.changeEdgeIdInput\n    })\n    console.log(\"edgeIndex: \" + edgeIndex)\n    if (edgeIndex === -1) {\n      return\n    }\n    newState.edges[edgeIndex].eventNames = newState.edges[edgeIndex].eventNames.filter(eventName => {\n      return eventName !== this.state.changeEdgeEventInput\n    })\n    this.setState(newState)\n  }\n  \n  render() {\n    if (this.eh) {\n      if (this.state.addEdge) {\n        this.eh.enableDrawMode()\n      }\n      else {\n        this.eh.disableDrawMode()\n        this.cy.autoungrabify(false)\n      }\n    }\n    let nodes = this.state.nodes.map(node => (\n      <div key={node.id}>id: {node.id}</div>\n    ))\n    let edges = this.state.edges.map(edge => (\n      <div key={edge.id}>\n        <div>id: {edge.id}</div>\n        <div>source: {edge.source}</div>\n        <div>target: {edge.target}</div>\n        <div>events: {edge.eventNames.map(eventName => (\n          <div key={eventName}>name: {eventName}</div>\n        ))}</div>\n      </div>\n    ))\n    let events = this.state.events.map(event => (\n      <div key={event.name}>name: {event.name}</div>\n    ))\n    return(\n      <div>\n        <div>\n          <h1>Automata:</h1>\n          <button onClick={this.clickSelect} className={`${this.state.select?'selected':''}`}>Select</button>\n          <button onClick={this.clickAddNodeButton} className={`${this.state.addNode?'selected':''}`}>Add node</button>\n          <button onClick={this.clickAddEdgeButton} className={`${this.state.addEdge?'selected':''}`}>Add edge</button>\n          <div className='cytoscapecanvas' id='cy'></div>\n          <div>nodes: {nodes}</div>\n          <br/>\n          <div>edges: {edges}</div>\n          <br/>\n          <div>events: {events}</div>\n        </div>\n        <div>\n          <h3>New event</h3>\n          <label>Name:\n            <input type=\"text\" id=\"name\" name=\"name\" value={this.state.addEventNameInput} onChange={this.handleAddEventNameChange}/>\n          </label>\n          <br/>\n          <button onClick={this.clickAddEventButton}>Add event</button>\n        </div>\n        <div>\n          <h3>Remove event</h3>\n          <label>Name:\n            <select value={this.state.deleteEventInput} onChange={this.deleteEventChange}>\n              {this.state.events.map(event => (\n                <option value={event.name} key={event.name}>{event.name}</option>\n              ))}\n            </select>\n          </label>\n          <br/>\n          <button onClick={this.clickDeleteEventButton}>Remove event</button>\n        </div>\n        <div>\n          <h3>Change edge</h3>\n          <label>Event Name:\n            <select value={this.state.changeEdgeEventInput} onChange={this.changeEdgeEventChange}>\n              {this.state.events.map(event => (\n                <option value={event.name} key={event.name}>{event.name}</option>\n              ))}\n            </select>\n          </label>\n          <br/>\n          <label>Edge Id:\n            <select value={this.state.changeEdgeIdInput} onChange={this.changeEdgeIdChange}>\n              {this.state.edges.map(edge => (\n                <option value={edge.id} key={edge.id}>{edge.id}</option>\n              ))}\n            </select>\n          </label>\n          <br/>\n          <button onClick={this.clickAddEventToEdgeButton}>Add event to edge</button>\n          <br/>\n          <button onClick={this.clickRemoveEventFromEdgeButton}>Remove event from edge</button>\n        </div>\n      </div>\n    )\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}